<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jiajiaba.github.io</id>
    <title>JIAJIA</title>
    <updated>2019-08-30T03:09:27.422Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jiajiaba.github.io"/>
    <link rel="self" href="https://jiajiaba.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://jiajiaba.github.io/images/avatar.png</logo>
    <icon>https://jiajiaba.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, JIAJIA</rights>
    <entry>
        <title type="html"><![CDATA[Docker常用命令]]></title>
        <id>https://jiajiaba.github.io/post/docker-chang-yong-ming-ling</id>
        <link href="https://jiajiaba.github.io/post/docker-chang-yong-ming-ling">
        </link>
        <updated>2019-08-27T01:24:21.000Z</updated>
        <summary type="html"><![CDATA[<p>Docker的一些常用命令。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Docker的一些常用命令。</p>
 <!-- more -->
<p><strong>帮助命令：</strong></p>
<ol>
<li>docker version：显示 Docker 版本信息。</li>
<li>docker info：显示 Docker 系统信息，包括镜像和容器数。</li>
<li>docker --help 帮助命令</li>
</ol>
<p><strong>镜像命令</strong></p>
<ol>
<li>docker images  列出本地主机上的镜像
<ul>
<li>-a：列出本地所有镜像（含中间映像层）</li>
<li>-q：只显示镜像ID</li>
<li>--digests：显示镜像的摘要信息</li>
<li>--no-trunc：显示完整的镜像信息</li>
</ul>
</li>
<li>docker search  从Docker Hub查找镜像
<ul>
<li>-s：列出收藏数不小于指定的镜像</li>
<li>--no-trunc：显示完整的镜像信息</li>
<li>--automated：只列出automated build(自动构建)类型的镜像，也就是非官方的。</li>
</ul>
</li>
<li>docker pull  从Docker Hub下载镜像</li>
<li>docker rmi   删除镜像
<ul>
<li>删除单个：docker rmi -f 镜像ID</li>
<li>删除多个：docker rmi -f 镜像名1:TAG 镜像名2:TAG</li>
<li>删除全部：docker rmi -f $(docker images -qa)</li>
</ul>
</li>
</ol>
<p><strong>容器命令(有镜像才能创建容器，这是根本前提)</strong></p>
<ol>
<li>docker images  列出本地主机上的镜像
<ul>
<li>--name = &quot;容器新名字&quot;，为容器指定一个名称</li>
<li>-d： 后台运行容器，并返回容器ID，即启动守护式容器</li>
<li>-i：以交互模式运行容器，通常与-t同时使用</li>
<li>-t为容器重新分配一个伪输入终端，通常与-i同时使用</li>
<li>-P：随机端口映射</li>
<li>-p：指定端口映射</li>
</ul>
</li>
<li>docker ps  列出当前正在运行的全部命令
<ul>
<li>-a：列出当前所有正在运行的容器+历史上运行过的</li>
<li>-l：显示最近创建的容器</li>
<li>-n：显示最近n个创建的容器</li>
<li>-q：静默模式，只显示容器编号</li>
<li>--no-trunc：不截断输出</li>
</ul>
</li>
<li>退出容器
<ul>
<li>exit：容器停止并且退出</li>
<li>ctrl+P+Q：容器不停止退出</li>
</ul>
</li>
<li>启动容器
<ul>
<li>docker start 容器ID或者容器名</li>
</ul>
</li>
<li>重启容器
<ul>
<li>docker restart 容器ID或者容器名</li>
</ul>
</li>
<li>停止容器
<ul>
<li>docker stop 容器ID或者容器名</li>
</ul>
</li>
<li>强制停止容器
<ul>
<li>docker kill 容器ID或者容器名</li>
</ul>
</li>
<li>删除已经停止的容器
<ul>
<li>docker rm 容器ID</li>
<li>一次性删除多个容器：docker rm -f $(docker ps -qa)</li>
</ul>
</li>
<li>启动守护式进程(即后台运行)
<ul>
<li>docker -d 容器名</li>
</ul>
</li>
<li>查看容器日志：docker logs -f --tail 容器ID
<ul>
<li>-t：是加入的时间戳</li>
<li>-f：跟随最新的日志打印</li>
<li>--tail 数字。显示最后多少条</li>
</ul>
</li>
<li>查看容器内运行的进程
<ul>
<li>docker top 容器ID</li>
</ul>
</li>
<li>查看容器内部细节
<ul>
<li>docker inspect 容器ID</li>
</ul>
</li>
<li>进入正在运行的容器，并以命令行交互
<ul>
<li>docker exec -it 容器ID /bin/bash</li>
<li>重新进入：docker attach 容器ID</li>
<li>两者区别：<br>
attach：直接进入容器启动命令的终端，不会启动新的进程。<br>
exec：是在容器中打开新的终端，并且可以启动新的进程，举例：docker exec - it 容器ID ls -l</li>
</ul>
</li>
<li>从容器内拷贝文件到主机上
<ul>
<li>docker cp 容器ID：容器内路径  目的主机路径</li>
</ul>
</li>
</ol>
]]></content>
    </entry>
</feed>